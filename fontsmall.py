# Code generated by font_to_py.py.
# Font: RedHatMono-Regular.ttf Char set: %0123456789:
# Cmd: ./font_to_py.py -c 0123456789:% RedHatMono-Regular.ttf 20 smallfont.py
version = '0.33'

def height():
    return 20

def baseline():
    return 20

def max_width():
    return 17

def hmap():
    return False

def reverse():
    return False

def monospaced():
    return False

def min_ch():
    return 37

def max_ch():
    return 63

_font =\
b'\x11\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x0c\x00\x00\x0e\x00'\
b'\x00\x06\x00\x00\x03\x00\x0e\x03\x38\x0e\x03\x3c\x0e\x03\x06\x00'\
b'\x03\x03\x00\x86\x01\x00\xfe\x01\x00\xf8\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x11\x00\x00\x00\x00\x7c\x00\x00\xc6\x00\x08'\
b'\x83\x00\x0c\x83\x00\x07\x82\xc0\x01\x7e\x70\x00\x18\x1c\x00\x00'\
b'\x06\x00\x80\xc3\x03\xe0\xe0\x07\x38\x30\x0c\x0e\x10\x08\x07\x10'\
b'\x08\x01\x60\x0e\x00\xc0\x03\x00\x00\x00\x11\x00\x00\x00\x00\x80'\
b'\x3f\x00\xf0\xff\x00\x7c\xe0\x03\x0e\x00\x07\x06\xc0\x0f\x03\xf0'\
b'\x0c\x03\x3c\x0c\x03\x0f\x0c\xc3\x03\x0c\xf3\x00\x0c\x3e\x00\x0e'\
b'\x1c\x00\x07\xf8\xf1\x03\xf0\xff\x00\x00\x0f\x00\x00\x00\x00\x11'\
b'\x00\x00\x00\x00\x00\x00\x00\x18\x00\x0c\x0c\x00\x0c\x0c\x00\x0c'\
b'\x04\x00\x0c\x06\x00\x0c\xfe\xff\x0f\xff\xff\x0f\x00\x00\x0c\x00'\
b'\x00\x0c\x00\x00\x0c\x00\x00\x0c\x00\x00\x0c\x00\x00\x0c\x00\x00'\
b'\x00\x00\x00\x00\x11\x00\x00\x00\x00\x00\x00\x00\x0c\x00\x0c\x0c'\
b'\x00\x0e\x06\x00\x0f\x02\x80\x0d\x03\xc0\x0c\x03\x60\x0c\x03\x38'\
b'\x0c\x03\x1c\x0c\x03\x0e\x0c\x06\x07\x0c\xfe\x03\x0c\xf8\x00\x0c'\
b'\x00\x00\x0c\x00\x00\x00\x00\x00\x00\x11\x00\x00\x00\x00\x04\x00'\
b'\x02\x0c\x00\x07\x0e\x00\x06\x06\x00\x0c\x03\x00\x0c\x03\x06\x0c'\
b'\x03\x06\x08\x03\x06\x0c\x03\x06\x0c\x06\x06\x0c\x0e\x0d\x0e\xfc'\
b'\x19\x07\xf8\xf0\x03\x00\xe0\x01\x00\x00\x00\x00\x00\x00\x11\x00'\
b'\x00\x00\x00\x00\x70\x00\x00\x78\x00\x00\x7c\x00\x00\x66\x00\x80'\
b'\x63\x00\xc0\x61\x00\xe0\x60\x00\x30\x60\x00\x18\x60\x00\x0e\x60'\
b'\x00\xff\xff\x0f\xff\xff\x0f\x00\x60\x00\x00\x60\x00\x00\x60\x00'\
b'\x00\x00\x00\x11\x00\x00\x00\x00\x00\x00\x02\xe0\x03\x07\xff\x07'\
b'\x06\x03\x02\x0c\x03\x03\x0c\x03\x03\x0c\x03\x03\x08\x03\x03\x08'\
b'\x03\x03\x0c\x03\x03\x0c\x03\x07\x0e\x03\x0e\x07\x03\xfc\x03\x00'\
b'\xf8\x00\x00\x00\x00\x00\x00\x00\x11\x00\x00\x00\x00\x00\x1f\x00'\
b'\xe0\xff\x00\xf8\xed\x03\x1c\x06\x07\x0e\x02\x06\x06\x03\x0c\x03'\
b'\x03\x0c\x03\x01\x0c\x03\x01\x0c\x03\x03\x0c\x03\x03\x0c\x03\x06'\
b'\x06\x06\x9e\x07\x02\xfc\x03\x00\x60\x00\x00\x00\x00\x11\x00\x00'\
b'\x00\x00\x03\x00\x00\x03\x00\x00\x03\x00\x08\x03\x00\x0c\x03\x00'\
b'\x0f\x03\xc0\x07\x03\xe0\x01\x03\x78\x00\x03\x1e\x00\x83\x07\x00'\
b'\xe3\x01\x00\x7b\x00\x00\x3f\x00\x00\x0f\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x11\x00\x00\x00\x00\x00\xc0\x00\x78\xf0\x03\xfc\xb8\x07'\
b'\x8e\x0d\x06\x06\x05\x0c\x03\x07\x0c\x03\x06\x08\x03\x06\x08\x03'\
b'\x06\x08\x03\x07\x0c\x06\x05\x0c\xce\x0d\x06\xfc\xf8\x07\x30\xf0'\
b'\x03\x00\x00\x00\x00\x00\x00\x11\x00\x00\x00\x00\xf0\x00\x00\xfc'\
b'\x03\x04\x0e\x07\x06\x06\x0e\x0c\x03\x0c\x0c\x03\x0c\x0c\x03\x08'\
b'\x0c\x03\x08\x0c\x03\x0c\x04\x03\x0c\x06\x06\x04\x03\x1e\xc2\x03'\
b'\xf8\xff\x00\xf0\x7f\x00\x00\x00\x00\x00\x00\x00\x11\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\xc0\x01\x0e\xc0\x01\x0e\xc0\x01\x0e\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00'

_index =\
b'\x00\x00\x35\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x6a\x00\x9f\x00\xd4\x00\x09\x01'\
b'\x3e\x01\x73\x01\xa8\x01\xdd\x01\x12\x02\x47\x02\x7c\x02\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\xb1\x02'

_mvfont = memoryview(_font)
_mvi = memoryview(_index)
ifb = lambda l : l[0] | (l[1] << 8)

def get_ch(ch):
    oc = ord(ch)
    ioff = 2 * (oc - 37 + 1) if oc >= 37 and oc <= 63 else 0
    doff = ifb(_mvi[ioff : ])
    width = ifb(_mvfont[doff : ])

    next_offs = doff + 2 + ((20 - 1)//8 + 1) * width
    return _mvfont[doff + 2:next_offs], 20, width
 
